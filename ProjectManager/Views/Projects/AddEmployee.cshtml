@using Microsoft.AspNetCore.Http;

@model ProjectManager.Models.ProjectEmployees;
@{
    ViewData["Title"] = "AddEmployee";

    if (Context.Session.GetString("UserId") == null)
    {
        Context.Response.Redirect("/Login/SignIn");
    }
    var projectName = ViewBag.ProjectName as string;
}

<h2>Add employee in project</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddEmployee">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label>Project name: @projectName</label>
            </div>
            <div class="form-group">
                <label asp-for="Employee" class="control-label"></label>
                <select id="dropDownList" asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId">
                    <option selected disabled>Choose the employee</option>
                </select>
                <span class="text-danger" id="employeeValidation"></span>
                <span class="text-danger" asp-validation-for="EmployeeId" />
            </div>
            <label class="control-label">Employment</label>
            <a id="employment" href="">0%</a><br />
            <label class="control-label">Inactivity</label>
            <label id="inactivity" class="control-label">0%</label>
            <div class="form-group">
                <label asp-for="Percent" class="control-label"></label>
                <input id="percent" asp-for="Percent" class="form-control" />
                <span class="text-danger" id="percentValidation"></span>
                <span asp-validation-for="Percent" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-controller="Projects" asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    var employeeId;
    $("#dropDownList").change(function () {
        GettingEmploymentOfSelectedEmployee();
        CheckinEmployeeExistInThisProject();
    })
    $("#percent").change(function () {
        CheckBenefit();
    })
    $(".btn").click(function () {
        //Check percent validation
        if ($("#inactivity").text().replace("%", "") - $("#percent").val() < 0) {
            $("#percentValidation").text("You entered too high a percentage");
            return false;
        }
        else {
            $("#percentValidation").text() = "";
        }
        if ($("#percentValidation").text() == "") {
            return true;
        }
        return false;
    })
    function GettingEmploymentOfSelectedEmployee() {
        employeeId = $("#dropDownList option:selected").val();
        $.ajax({
            url: '/Projects/GetEmploymentPercent',
            dataType: "json",
            type: "GET",
            async: false,
            data: { id: employeeId },
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#employment").text(data + '%');
                $("#employment").attr("href", function () {
                    return "@Url.Action("EmployeeProjects","Projects")/" + employeeId;
                });
                $("#inactivity").text(100 - data + '%');
            }
        })
    }
    function CheckinEmployeeExistInThisProject() {
        $.ajax({
            url: '/Projects/CheckEmployeeExist',
            dataType: "json",
            type: "GET",
            data: { employeeId: employeeId, projectId: @ViewBag.ProjectId},
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data) {
                    $("#employeeValidation").text("Employee is already exist in this project");
                }
                else {
                    $("#employeeValidation").text("");
                }
            }
        })
    }
</script>